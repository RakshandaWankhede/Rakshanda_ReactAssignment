{"ast":null,"code":"import _defineProperty from \"/home/rakshanda.wankhede@objectedge.com/React/login-form/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rakshanda.wankhede@objectedge.com/React/login-form/src/container/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Login from '../components/login';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: ''\n    };\n\n    this.changeHandler = event => {\n      const value = event.target.value;\n      this.setState(_objectSpread({}, this.state, {\n        [event.target.name]: value\n      }));\n      this.setState({\n        result: \"\"\n      });\n    };\n\n    this.clickHandler = () => {\n      this.Authentication.map((details, index) => {\n        if (details.name === this.state.Name && details.password === this.state.Password) {\n          this.setState({\n            result: \"success\"\n          });\n          return 0;\n        }\n\n        this.setState({\n          result: \"Failed\"\n        });\n      });\n    };\n\n    this.Authentication = [{\n      name: \"abc\",\n      password: \"abc\"\n    }];\n  }\n\n  componentDidMount() {\n    // axios.get(`https://api.github.com/users/1`)\n    //     .then(res => {\n    //       console.log(res);\n    //      // this.setState({result:res});\n    //     });\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'somewhere', true);\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n    xhr.onload = function () {\n      console.log(this.responseText);\n    };\n\n    xhr.send('user=person&pwd=password&organization=place&requiredkey=key');\n    fetch(\"http://www.example.co.uk/login\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'test',\n        password: 'test123'\n      })\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"POST Response\", \"Response Body\" + JSON.stringify(responseData));\n    }).done();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Login, {\n      name: this.state.name,\n      Password: this.state.Passwod,\n      result: this.state.result,\n      changeHandler: this.changeHandler,\n      click: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rakshanda.wankhede@objectedge.com/React/login-form/src/container/App.js"],"names":["React","Component","Login","axios","App","constructor","state","result","changeHandler","event","value","target","setState","name","clickHandler","Authentication","map","details","index","Name","password","Password","componentDidMount","xhr","XMLHttpRequest","open","setRequestHeader","onload","console","log","responseText","send","fetch","method","headers","body","JSON","stringify","username","then","response","json","responseData","done","render","Passwod"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Login from '../components/login';\nimport axios from 'axios';\n\nclass App extends Component  {\n  constructor(){\n    super();\n      this.Authentication=[\n      {name:\"abc\" , password : \"abc\"}\n   ]\n  }\n  state={\n    result:''\n }\n componentDidMount(){\n  // axios.get(`https://api.github.com/users/1`)\n  //     .then(res => {\n  //       console.log(res);\n  //      // this.setState({result:res});\n  //     });\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'somewhere', true);\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    xhr.onload = function () {\n        console.log(this.responseText);\n    };\n    xhr.send('user=person&pwd=password&organization=place&requiredkey=key');\n    fetch(\"http://www.example.co.uk/login\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: 'test',\n                password: 'test123',\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(\n                    \"POST Response\",\n                    \"Response Body\" + JSON.stringify(responseData)\n                )\n            })\n            .done();\n    }\n\nchangeHandler=(event)=>{\n  const value = event.target.value;\n  this.setState({...this.state,[event.target.name]: value});\n  this.setState({result:\"\"});\n}\n clickHandler = ()=>{\n     this.Authentication.map((details,index)=>{\n       if(details.name === this.state.Name && details.password === this.state.Password)\n       {\n         this.setState({result:\"success\"});\n         return 0;\n        }\n        this.setState({result:\"Failed\"});\n    });\n }\n  render(){\n    return (\n      <div className=\"App\">\n        <Login \n        name={this.state.name}\n        Password={this.state.Passwod}\n        result={this.state.result}\n        changeHandler ={this.changeHandler}\n        click={this.clickHandler}>\n        </Login>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}